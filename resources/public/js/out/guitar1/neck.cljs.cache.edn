;; Analyzed by ClojureScript 0.0-3126
{:use-macros nil, :excludes #{}, :name guitar1.neck, :imports nil, :requires {utils guitar1.utils, guitar1.utils guitar1.utils, react cljsjs.react, cljsjs.react cljsjs.react, events goog.events, goog.events goog.events, reagent.core reagent.core, r reagent.core}, :uses {atom reagent.core}, :defs {set-key {:protocol-inline nil, :meta {:arglists (quote ([key])), :end-column 14, :end-line 44, :column 7, :line 44, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/set-key, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 14, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key])), :test true}, neck-string {:protocol-inline nil, :meta {:arglists (quote ([start-note])), :end-column 18, :end-line 48, :column 7, :line 48, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/neck-string, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 18, :method-params ([start-note]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/LazySeq, :variadic false, :max-fixed-arity 1}), :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([start-note])), :test true}, render-neck {:protocol-inline nil, :meta {:arglists (quote ([key scale])), :end-column 18, :end-line 76, :column 7, :line 76, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/render-neck, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 18, :method-params ([key scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key scale])), :test true}, pentatonic-minor {:meta {:end-column 22, :end-line 27, :column 6, :line 27, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 27, :column 1, :end-line 27, :end-column 22, :test true, :name guitar1.neck/pentatonic-minor}, ionian {:meta {:end-column 12, :end-line 25, :column 6, :line 25, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 25, :column 1, :end-line 25, :end-column 12, :test true, :name guitar1.neck/ionian}, neck-key {:meta {:end-column 14, :end-line 42, :column 6, :line 42, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 42, :column 1, :end-line 42, :end-column 14, :test true, :name guitar1.neck/neck-key}, strings {:meta {:end-column 13, :end-line 24, :column 6, :line 24, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 24, :column 1, :end-line 24, :end-column 13, :test true, :name guitar1.neck/strings}, pentatonic-major {:meta {:end-column 22, :end-line 29, :column 6, :line 29, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 29, :column 1, :end-line 29, :end-column 22, :test true, :name guitar1.neck/pentatonic-major}, mode {:protocol-inline nil, :meta {:arglists (quote ([mode-name])), :end-column 11, :end-line 32, :column 7, :line 32, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/mode, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 11, :method-params ([mode-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/LazySeq, :variadic false, :max-fixed-arity 1}), :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mode-name])), :test true}, modes {:meta {:end-column 11, :end-line 38, :column 6, :line 38, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 38, :column 1, :end-line 38, :end-column 11, :test true, :name guitar1.neck/modes}, build-string {:protocol-inline nil, :meta {:arglists (quote ([start-note])), :end-column 19, :end-line 69, :column 7, :line 69, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/build-string, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 19, :method-params ([start-note]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([start-note])), :test true}, mode-names {:meta {:end-column 16, :end-line 31, :column 6, :line 31, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 31, :column 1, :end-line 31, :end-column 16, :test true, :name guitar1.neck/mode-names}, scale-nth {:protocol-inline nil, :meta {:arglists (quote ([scale n])), :end-column 16, :end-line 13, :column 7, :line 13, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/scale-nth, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 16, :method-params ([scale n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scale n])), :test true}, neck {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 11, :end-line 90, :column 7, :line 90, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/neck, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, pairs {:meta {:end-column 11, :end-line 22, :column 6, :line 22, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 22, :column 1, :end-line 22, :end-column 11, :test true, :name guitar1.neck/pairs}, scaleify {:protocol-inline nil, :meta {:arglists (quote ([start-note scale])), :end-column 15, :end-line 54, :column 7, :line 54, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/scaleify, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 15, :method-params ([start-note scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/LazySeq, :variadic false, :max-fixed-arity 2}), :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start-note scale])), :test true}, make-fret {:protocol-inline nil, :meta {:arglists (quote ([key scale note])), :end-column 16, :end-line 59, :column 7, :line 59, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/make-fret, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 16, :method-params ([key scale note]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 3}), :line 59, :end-line 59, :max-fixed-arity 3, :fn-var true, :arglists (quote ([key scale note])), :test true}, set-scale {:protocol-inline nil, :meta {:arglists (quote ([scale])), :end-column 16, :end-line 46, :column 7, :line 46, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :name guitar1.neck/set-scale, :variadic false, :file "src/cljs/guitar1/neck.cljs", :end-column 16, :method-params ([scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scale])), :test true}, chromatic {:meta {:end-column 15, :end-line 23, :column 6, :line 23, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 23, :column 1, :end-line 23, :end-column 15, :test true, :name guitar1.neck/chromatic}, neck-scale {:meta {:end-column 16, :end-line 41, :column 6, :line 41, :file "/Users/xin/code/Clojure/guitar1/src/cljs/guitar1/neck.cljs"}, :file "src/cljs/guitar1/neck.cljs", :line 41, :column 1, :end-line 41, :end-column 16, :test true, :name guitar1.neck/neck-scale}}, :require-macros nil, :cljs.analyzer/constants {:order [:A :A# :B :C :C# :D :D# :E :F :F# :G :G# :Ionian :Dorian :Phrygian :Lydian :Mixolydian :Aeolian :Locrian :li :on-click :class :ul.string :div.fretboard :p :div.scales :button :hr :div.neck :ul.string.frets], :seen #{:G# :Aeolian :hr :div.scales :Lydian :Dorian :A :F :button :div.neck :Ionian :li :A# :D :B :ul.string :ul.string.frets :C :on-click :D# :E :Locrian :G :class :Phrygian :F# :Mixolydian :div.fretboard :p :C#}}, :doc nil}